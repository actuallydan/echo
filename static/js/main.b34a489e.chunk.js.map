{"version":3,"sources":["utils/generate.js","components/Nav.js","components/Input.js","components/Button.js","utils/data.js","pages/Config.js","components/StatusBar.js","components/HealDamage.js","pages/Dashboard.js","components/GunDisplay.js","pages/GunRange.js","App.js","serviceWorker.js","index.js"],"names":["classes","type","damage","range","brands","elements","Nav","props","useGlobal","theme","history","useHistory","navigate","e","dest","currentTarget","getAttribute","console","log","push","textLabelStyles","color","className","data-dest","onClick","style","Input","value","onChange","inputColor","styles","border","boxShadow","filter","Button","label","btnColor","defaultState","hp","sp","guns","shieldRemaining","healthRemaining","Config","useState","state","setState","setTheme","global","hasBeenUpdated","setHasBeenUpdated","useEffect","localStorage","getItem","backup","JSON","parse","stringify","setItem","updateValue","newState","name","parseInt","labeStyles","val","defaultValue","setGlobal","removeItem","StatusBar","blue","total","remaining","width","toFixed","background","fieldsetStyles","borderColor","regen","HealDamage","setShieldRemaining","setHealthRemaining","amount","setAmount","amountLeft","marginLeft","marginRight","amt","Dashboard","shouldRegenShield","GunDisplay","gun","brand","labelStyles","replace","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","fontSize","margin","setGun","rarity","setRarity","setDamage","pistol","assault_rifle","sniper_rifle","shotgun","rocket_launcher","submachine_gun","avgDmg","setAvgDmg","shoot","getDamage","roll","d","Math","floor","random","dmg","quantity","i","bonusDamage","quantity2","d2","calculateDamage","newAvg","event","target","display","flexDirection","r","key","classType","uniformSample","n","newDamageCount","dieType","rollBonus","element","generateGun","length","reduce","agg","App","hasLoaded","setHasLoaded","globalState","backuper","setInterval","clearTimeout","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b34a489e.chunk.js","sourcesContent":["const classes = [\n  { type: \"pistol\", damage: \"2d6\", range: 40 },\n  { type: \"assault_rifle\", damage: \"2d10\", range: 60 },\n  { type: \"sniper_rifle\", damage: \"1d12\", range: 200 },\n  { type: \"shotgun\", damage: \"4d4\", range: 20 },\n  { type: \"rocket_launcher\", damage: \"2d20\", range: 60 },\n  { type: \"submachine_gun\", damage: \"3d4\", range: 40 }\n];\n\nconst brands = [\n  \"Dahl\",\n  \"Hyperion\",\n  \"Jakobs\",\n  \"Maliwan\",\n  \"Tediore\",\n  \"Torgue\",\n  \"Vladof\"\n];\n\nconst elements = [\"fire\", \"lightning\", \"cold\", \"force\", \"necrotic\"];\n\nexport function generateGun(\n  rarity = 1,\n  classType = null,\n  brand = null,\n  element\n) {\n  rarity = parseInt(rarity, 10);\n\n  // class (rifle, pistol, shotgun etc)\n  const uniformSample = n => {\n    return (Math.random() * (n + 1) + (n - 1)) | 0;\n  };\n\n  let gun = classType || classes[Math.floor(Math.random() * 6)];\n\n  // brand\n  gun.brand = brand || brands[Math.floor(Math.random() * 7)];\n\n  // additional damage\n  let [newDamageCount, dieType] = gun.damage.split(\"d\");\n  newDamageCount = parseInt(newDamageCount, 10) + rarity - 1;\n  gun.damage = newDamageCount + \"d\" + dieType;\n\n  // range\n  gun.range = gun.range + uniformSample(rarity - 1) * 10;\n\n  // attack roll bonus (+1 weapon etc.)\n  gun.rollBonus = rarity;\n\n  // bonus damage\n  gun.bonusDamage =\n    gun.brand === \"Jakobs\"\n      ? null\n      : Math.random() > 0.8 || gun.brand === \"Maliwan\"\n      ? \"d6\"\n      : null;\n\n  // number of bonus damage dice\n  if (gun.bonusDamage) {\n    gun.bonusDamage = uniformSample(rarity + 1) + gun.bonusDamage;\n    gun.element =\n      gun.element !== \"Torgue\"\n        ? elements[Math.floor(Math.random() * 7)]\n        : \"force\";\n  }\n\n  return gun;\n}\n\nexport function calculateDamage(gun) {\n  const roll = d => Math.floor(Math.random() * d) + 1;\n\n  let dmg = 0;\n  const [quantity, d] = gun.damage.split(\"d\");\n\n  for (let i = 0; i < quantity; i++) {\n    dmg += roll(d);\n  }\n  if (gun.bonusDamage) {\n    const [quantity2, d2] = gun.bonusDamage.split(\"d\");\n\n    for (let i = 0; i < quantity2; i++) {\n      dmg += roll(d2);\n    }\n  }\n  return dmg;\n}\n","import React, { useGlobal } from \"reactn\";\nimport { useHistory } from \"react-router-dom\";\nimport { Activity, Sun, Settings } from \"react-feather\";\n\nexport default function Nav(props) {\n  const [theme] = useGlobal(\"theme\");\n  const history = useHistory();\n\n  // navigate\n  const navigate = (e) => {\n    const dest = e.currentTarget.getAttribute(\"data-dest\");\n    console.log(history, dest);\n    history.push(dest);\n  };\n\n  const textLabelStyles = {\n    color: theme,\n  };\n\n  return (\n    <div className=\"row around nav\">\n      <div className=\"column center\">\n        <Activity data-dest={\"/app\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Stats\n        </div>\n      </div>\n      <div className=\"column center\">\n        <Settings data-dest={\"/config\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Settings\n        </div>\n      </div>\n      <div className=\"column center\">\n        <Sun data-dest={\"/guns\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Guns\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function Input({\n  value = 0,\n  color,\n  onChange,\n  style = {},\n  ...props\n}) {\n  const [theme] = useGlobal(\"theme\");\n\n  const inputColor = color || theme || \"#00DFFE\";\n  const styles = {\n    border: \"2px solid \" + inputColor,\n    color: inputColor,\n    boxShadow: \"inset 0px 0px 1em \" + inputColor,\n    filter: `drop-shadow(0px 0px 0.2em ${inputColor}20)`,\n    ...style,\n  };\n\n  return (\n    <input\n      className=\"input\"\n      type=\"number\"\n      onChange={onChange}\n      style={styles}\n      value={value}\n      {...props}\n    />\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function Button({ label = \"Button\", onClick, color, ...props }) {\n  const [theme] = useGlobal(\"theme\");\n\n  const btnColor = color || theme || \"#00DFFE\";\n  const styles = {\n    border: \"2px solid \" + btnColor,\n    color: btnColor,\n    boxShadow: \"inset 0px 0px 0.1em \" + btnColor,\n    filter: `drop-shadow(0px 0px 0.5em ${btnColor})`,\n  };\n\n  return (\n    <div {...props} onClick={onClick} className=\"button\" style={styles}>\n      {label}\n    </div>\n  );\n}\n","export const defaultState = {\n  theme: \"#00DFFE\",\n  hp: 10,\n  sp: 10,\n  guns: null,\n  shieldRemaining: 10,\n  healthRemaining: 10,\n};\n","import React, { useEffect, useGlobal, setGlobal, useState } from \"reactn\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultState } from \"../utils/data\";\n\nexport default function Config(props) {\n  const [state, setState] = useState({\n    hp: 20,\n    sp: 10,\n  });\n  const [theme, setTheme] = useGlobal(\"theme\");\n  const [global] = useGlobal();\n\n  const [hasBeenUpdated, setHasBeenUpdated] = useState(false);\n  const history = useHistory();\n\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n\n  useEffect(() => {\n    //   if local data exists hydrate our store with it\n    if (localStorage && localStorage.getItem(\"BL_Backup\")) {\n      const backup = JSON.parse(localStorage.getItem(\"BL_Backup\"));\n      setState({\n        ...backup,\n      });\n    }\n  }, []);\n\n  const updateGlobalStatus = () => {\n    setGlobal({\n      hp: state.hp,\n      sp: state.sp,\n    });\n\n    setHasBeenUpdated(true);\n  };\n\n  // after updating hp and sp, update backup\n  useEffect(() => {\n    console.log(global);\n    const backup = JSON.stringify(global);\n    localStorage.setItem(\"BL_Backup\", backup);\n  }, [hp, sp]);\n\n  // navigate to app after update\n  useEffect(() => {\n    if (hasBeenUpdated) {\n      history.push(\"/app\");\n    }\n  }, [hasBeenUpdated]);\n\n  const updateValue = (e) => {\n    const newState = { ...state };\n    newState[e.currentTarget.name] = parseInt(e.currentTarget.value, 10);\n\n    setState({ ...newState });\n  };\n\n  const updateTheme = (e) => {\n    const val = e.currentTarget.value;\n\n    setTheme(val);\n  };\n\n  const labeStyles = {\n    color: theme,\n  };\n\n  const reset = () => {\n    setGlobal(defaultState);\n    localStorage.removeItem(\"BL_Backup\");\n  };\n\n  return (\n    <div>\n      <div className=\"section row between\">\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.hp} name=\"hp\" />\n          <div style={labeStyles}>Hitpoints</div>\n        </div>\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.sp} name=\"sp\" />\n          <div style={labeStyles}>Shield Power</div>\n        </div>\n      </div>\n      <div className=\"section\">\n        <div style={labeStyles}>Color Theme</div>\n        <input\n          className=\"input color-picker\"\n          type=\"color\"\n          onChange={updateTheme}\n          defaultValue={theme}\n          value={theme}\n          style={{\n            boxShadow: \"inset 0px 0px 0.1em \" + theme,\n            filter: `drop-shadow(0px 0px 0.5em ${theme})`,\n            border: `3px solid ${theme}`,\n          }}\n        />\n      </div>\n      <div className=\"section\">\n        <Button label={\"save\"} onClick={updateGlobalStatus} />\n      </div>\n      <div className=\"section\">\n        <Button label={\"clear\"} color={\"#F44336\"} onClick={reset} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function StatusBar({\n  blue = false,\n  total = 10,\n  remaining = 10,\n  ...props\n}) {\n  const color = blue ? \"#00dffc\" : \"#F44336\";\n\n  const styles = {\n    width: ((remaining / total) * 100).toFixed(2) + \"%\",\n    background: color,\n  };\n\n  const fieldsetStyles = {\n    borderColor: blue ? \"#00dffc\" : \"#F44336\",\n    boxShadow: \"inset 0px 0px 1em \" + color,\n    filter: `drop-shadow(0px 0px ${(remaining / total) * 0.5 + \"em\"} ${color})`,\n  };\n\n  const regen = () => {\n    props.regen(blue);\n  };\n\n  return (\n    <div>\n      <fieldset\n        className=\"statusBarFieldSet\"\n        onClick={regen}\n        style={fieldsetStyles}\n      >\n        <legend className=\"legend textBorder\">{remaining}</legend>\n        <div className=\"statusBarInner\" style={styles}></div>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useGlobal } from \"reactn\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nexport default function HealDamage(props) {\n  const [shieldRemaining, setShieldRemaining] = useGlobal(\"shieldRemaining\");\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n\n  const [healthRemaining, setHealthRemaining] = useGlobal(\"healthRemaining\");\n  const [amount, setAmount] = useState(0);\n\n  const doDamage = () => {\n    const amt = parseInt(amount, 10);\n\n    let amountLeft = amt;\n\n    // if damage done is excessive (double total sp) we still do health damage\n    if (amountLeft > sp * 2) {\n      amountLeft = amountLeft - sp * 2;\n      setShieldRemaining(0);\n\n      setHealthRemaining(\n        amountLeft >= healthRemaining ? 0 : healthRemaining - amountLeft\n      );\n      amountLeft = 0;\n    }\n\n    // return early if need be\n    if (amountLeft <= 0) {\n      return;\n    }\n\n    // first do damage to shield, then hp if none available\n    if (shieldRemaining > 0) {\n      setShieldRemaining(\n        amountLeft >= shieldRemaining ? 0 : shieldRemaining - amountLeft\n      );\n    } else {\n      setHealthRemaining(\n        amountLeft >= healthRemaining ? 0 : healthRemaining - amountLeft\n      );\n    }\n  };\n\n  useEffect(() => {\n    setAmount(0);\n  }, [healthRemaining, shieldRemaining]);\n\n  const updateAmount = (e) => {\n    setAmount(e.currentTarget.value);\n  };\n\n  const addHealth = () => {\n    const amt = parseInt(amount, 10);\n\n    if (healthRemaining + amt >= hp) {\n      setHealthRemaining(hp);\n    } else {\n      setHealthRemaining(healthRemaining + amt);\n    }\n  };\n\n  const inputStyles = { marginLeft: \"1em\", marginRight: \"1em\" };\n  return (\n    <div className=\"row center\">\n      <Button onClick={doDamage} label={\"-\"} color={\"#F44336\"} />\n      <Input value={amount} onChange={updateAmount} style={inputStyles} />\n      <Button onClick={addHealth} label={\"+\"} color={\"#09ff9b\"} />\n    </div>\n  );\n}\n","import React, { useGlobal } from \"reactn\";\nimport Button from \"../components/Button\";\nimport StatusBar from \"../components/StatusBar\";\nimport HealDamage from \"../components/HealDamage\";\n\nexport default function Dashboard(props) {\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n  const [shieldRemaining, setShieldRemaining] = useGlobal(\"shieldRemaining\");\n  const [healthRemaining, setHealthRemaining] = useGlobal(\"healthRemaining\");\n\n  console.log(sp, hp);\n  const regen = (shouldRegenShield) => {\n    shouldRegenShield ? setShieldRemaining(sp) : setHealthRemaining(hp);\n  };\n\n  return (\n    <div>\n      {/* SP */}\n      <StatusBar blue total={sp} remaining={shieldRemaining} regen={regen} />\n      {/* HP */}\n      <StatusBar total={hp} remaining={healthRemaining} regen={regen} />\n\n      {/* Damage/Heal */}\n      <HealDamage />\n    </div>\n  );\n}\n","import React, { useGlobal } from \"react\";\nimport Button from \"./Button\";\n\nexport default function GunDisplay({\n  gun: { type, brand, range, damage },\n  ...props\n}) {\n  //   const [theme, setTheme] = useGlobal(\"theme\");\n\n  const bang = () => {};\n\n  const theme = \"#FFF\";\n  const labelStyles = {\n    color: theme,\n  };\n\n  return (\n    <div className=\"row between gunRow\">\n      <div className=\"column\">\n        <div style={labelStyles}>\n          {type\n            .replace(\"_\", \" \")\n            .toLowerCase()\n            .split(\" \")\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(\" \")}\n        </div>\n        <div style={{ ...labelStyles, fontSize: \"0.7em\" }}>{brand}</div>\n      </div>\n\n      <div className=\"column\">\n        <div style={labelStyles}>{range} ft</div>\n      </div>\n\n      <div className=\"column\">\n        <Button\n          label={damage}\n          onClick={bang}\n          color={theme}\n          style={{ margin: 0 }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useGlobal } from \"reactn\";\nimport Button from \"../components/Button\";\n\nimport { generateGun, calculateDamage } from \"../utils/generate\";\nimport GunDisplay from \"../components/GunDisplay\";\n\nexport default function Dashboard(props) {\n  const [gun, setGun] = useState(null);\n  const [rarity, setRarity] = useState(1);\n  const [damage, setDamage] = useState(null);\n  const [avgDmg, setAvgDmg] = useState({\n    pistol: [],\n    assault_rifle: [],\n    sniper_rifle: [],\n    shotgun: [],\n    rocket_launcher: [],\n    submachine_gun: [],\n  });\n\n  const createRandomGun = () => {\n    setGun(generateGun(rarity));\n  };\n\n  const updateRarity = (event) => {\n    setRarity(event.target.value);\n  };\n\n  const shoot = () => {\n    const getDamage = calculateDamage(gun);\n    setDamage(getDamage);\n    const newAvg = {\n      ...avgDmg,\n      [gun.type]: [...avgDmg[gun.type], getDamage],\n    };\n\n    setAvgDmg(newAvg);\n  };\n  console.log(gun);\n  return (\n    <>\n      <p>Select a rarity:</p>\n      <div\n        onChange={updateRarity}\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n      >\n        {[\"Common\", \"Rare\", \"Epic\", \"Legendary\"].map((r, i) => (\n          <div style={{ display: \"flex\", flexDirection: \"row\" }} key={r}>\n            <input type=\"radio\" name=\"radio\" value={i + 1} />\n            <div>{r}</div>\n          </div>\n        ))}\n      </div>\n      <br />\n\n      <Button onClick={createRandomGun} label={\"Random Gun\"} />\n      <br />\n      <br />\n\n      {gun && (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <GunDisplay gun={gun} />\n\n          <div>{\"Brand : \" + gun.brand}</div>\n          <div>{\"Type:   \" + gun.type}</div>\n          <div>{\"Range:  \" + gun.range + \"ft\"}</div>\n          <div>{\"Damage: \" + gun.damage}</div>\n          {gun.bonusDamage && (\n            <div>{\"Element: \" + gun.bonusDamage + \" \" + gun.element}</div>\n          )}\n        </div>\n      )}\n      <br />\n      {gun && <button onClick={shoot}>BANG!</button>}\n      <br />\n\n      {damage ? (\n        <div key={Math.random()} className={\"popOff\"}>\n          {damage}\n        </div>\n      ) : null}\n\n      <div>\n        Average Damage:\n        {avgDmg[\"pistol\"].length ? (\n          <div>\n            {\"pistol:  \" +\n              avgDmg[\"pistol\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"pistol\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"assault_rifle\"].length ? (\n          <div>\n            {\"assault_rifle: \" +\n              avgDmg[\"assault_rifle\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"assault_rifle\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"sniper_rifle\"].length ? (\n          <div>\n            {\"sniper_rifle:  \" +\n              avgDmg[\"sniper_rifle\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"sniper_rifle\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"shotgun\"].length ? (\n          <div>\n            {\"shotgun: \" +\n              avgDmg[\"shotgun\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"shotgun\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"rocket_launcher\"].length ? (\n          <div>\n            {\"rocket_launcher: \" +\n              avgDmg[\"rocket_launcher\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"rocket_launcher\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"submachine_gun\"].length ? (\n          <div>\n            {\"submachine_gun: \" +\n              avgDmg[\"submachine_gun\"].reduce((d, agg) => (agg += d)) /\n                avgDmg[\"submachine_gun\"].length}\n          </div>\n        ) : null}\n      </div>\n      <Button onClick={shoot} label={\"Button\"} />\n    </>\n  );\n}\n","import React, { useState, useGlobal, setGlobal, useEffect } from \"reactn\";\nimport { generateGun, calculateDamage } from \"./utils/generate\";\nimport Nav from \"./components/Nav\";\n\nimport Config from \"./pages/Config\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport GunRange from \"./pages/GunRange\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { defaultState } from \"./utils/data\";\n\nimport \"./App.css\";\n\n// initialize with default data\nsetGlobal(defaultState);\n\nfunction App() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [globalState] = useGlobal();\n  useEffect(() => {\n    //   if local data exists hydrate our store with it\n    if (localStorage && localStorage.getItem(\"BL_Backup\")) {\n      const backup = JSON.parse(localStorage.getItem(\"BL_Backup\"));\n      setGlobal({\n        ...backup,\n      });\n    }\n\n    setHasLoaded(true);\n\n    const backuper = setInterval(() => {\n      const backup = JSON.stringify(globalState);\n      localStorage.setItem(\"BL_Backup\", backup);\n    }, 20000);\n\n    return () => {\n      clearTimeout(backuper);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {hasLoaded ? (\n        <Router>\n          <Nav />\n          <Switch>\n            <Route path=\"/config\">\n              <Config />\n            </Route>\n            <Route path=\"/app\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/guns\">\n              <GunRange />\n            </Route>\n          </Switch>\n        </Router>\n      ) : (\n        \"Loading...\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}