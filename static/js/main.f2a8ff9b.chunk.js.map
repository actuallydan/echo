{"version":3,"sources":["components/Nav.js","utils/data.js","components/Input.js","components/Button.js","components/Fieldset.js","components/GunTableLabel.js","utils/generate.js","components/GunDisplay.js","components/RoundButton.js","components/GunSmith.js","pages/Config.js","components/StatusBar.js","components/HealDamage.js","pages/Dashboard.js","pages/GunRange.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","useGlobal","theme","history","useHistory","navigate","e","dest","currentTarget","getAttribute","push","textLabelStyles","color","className","data-dest","onClick","style","defaultState","hp","sp","prof","dex","guns","shieldRemaining","healthRemaining","Input","value","onChange","inputColor","styles","border","boxShadow","filter","Button","label","btnColor","Fieldset","children","fieldSetStyles","padding","marginBottom","legendStyles","GunTableLabel","hideAttack","labelStyles","headerStyle","borderBottom","classes","type","damage","range","brands","elements","uniformSample","n","Math","random","uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","GunDisplay","gun","brand","rarity","element","bonusDamage","hideDamage","hitBonus","useState","damageInst","setDamageInst","fire","setFire","attackInst","setAttackInst","att","setAtt","useEffect","timer","setTimeout","clearTimeout","elementStyles","lightning","cold","force","necrotic","marginLeft","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","fontSize","roll","floor","alert","margin","getDamage","d","dmg","quantity","i","quantity2","d2","calculateDamage","RoundButton","active","data","btnStyles","backgroundColor","GunSmith","onNewGun","activeType","setActiveType","activeRarity","setActiveRarity","typeMap","pistol","assault_rifle","sniper_rifle","shotgun","rocket_launcher","submachine_gun","id","newGun","classType","find","parseInt","newDamageCount","dieType","generateGun","t","r","Config","JSON","parse","localStorage","getItem","state","setState","hasBeenUpdated","setHasBeenUpdated","global","setTheme","setGuns","backup","stringify","setItem","updateValue","newState","name","labeStyles","deleteItem","newGunsList","g","val","data-id","setGlobal","removeItem","StatusBar","blue","total","remaining","width","toFixed","background","fieldsetStyles","borderColor","regen","HealDamage","setShieldRemaining","setHealthRemaining","amount","setAmount","amountLeft","marginRight","amt","Dashboard","base64backup","btoa","console","log","shouldRegenShield","defaultValue","cursor","onPaste","string","clipboardData","getData","obj","atob","hasOwnProperty","window","select","navigator","clipboard","writeText","then","alignSelf","myGuns","forEach","mine","App","hasLoaded","setHasLoaded","globalState","path","height","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f2a8ff9b.chunk.js","sourcesContent":["import React, { useGlobal } from \"reactn\";\nimport { useHistory } from \"react-router-dom\";\nimport { Activity, Sun, Settings } from \"react-feather\";\n\nexport default function Nav(props) {\n  const [theme] = useGlobal(\"theme\");\n  const history = useHistory();\n\n  // navigate\n  const navigate = (e) => {\n    const dest = e.currentTarget.getAttribute(\"data-dest\");\n    history.push(dest);\n  };\n\n  const textLabelStyles = {\n    color: theme,\n  };\n\n  return (\n    <div className=\"row between nav\">\n      <div className=\"column center\">\n        <Settings data-dest={\"/config\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Settings\n        </div>\n      </div>\n      <div className=\"column center\">\n        <Activity data-dest={\"/\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Stats\n        </div>\n      </div>\n      <div className=\"column center\">\n        <Sun data-dest={\"/guns\"} onClick={navigate} color={theme} />\n        <div className=\"navLabel\" style={textLabelStyles}>\n          Guns\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const defaultState = {\n  theme: \"#00DFFE\",\n  hp: 10,\n  sp: 10,\n  prof: 0,\n  dex: 0,\n  guns: [],\n  shieldRemaining: 10,\n  healthRemaining: 10,\n};\n","import React, { useGlobal } from \"reactn\";\n\nexport default function Input({\n  value = null,\n  color,\n  onChange,\n  style = {},\n  ...props\n}) {\n  const [theme] = useGlobal(\"theme\");\n\n  const inputColor = color || theme || \"#00DFFE\";\n  const styles = {\n    border: \"2px solid \" + inputColor,\n    color: inputColor,\n    boxShadow: \"inset 0px 0px 1em \" + inputColor,\n    filter: `drop-shadow(0px 0px 0.2em ${inputColor}20)`,\n    ...style,\n  };\n\n  return (\n    <input\n      className=\"input\"\n      onChange={onChange}\n      style={styles}\n      value={value}\n      {...props}\n    />\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function Button({ label = \"Button\", onClick, color, className = \"\", ...props }) {\n  const [theme] = useGlobal(\"theme\");\n\n  const btnColor = color || theme || \"#00DFFE\";\n  const styles = {\n    border: \"2px solid \" + btnColor,\n    color: btnColor,\n    boxShadow: \"inset 0px 0px 0.1em \" + btnColor,\n    filter: `drop-shadow(0px 0px 0.5em ${btnColor})`,\n  };\n\n  return (\n    <div {...props} onClick={onClick} className={`button ${className}`} style={styles}>\n      {label}\n    </div>\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function Fieldset({ children, label }) {\n  const [theme] = useGlobal(\"theme\");\n\n  const fieldSetStyles = {\n    border: `2px solid ${theme}`,\n    padding: \"1em\",\n    marginBottom: \"2em\",\n  };\n  const legendStyles = {\n    color: theme,\n  };\n\n  return (\n    <fieldset className=\"fieldsetSection\" style={fieldSetStyles}>\n      <legend style={legendStyles}>{label}</legend>\n      {children}\n    </fieldset>\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function GunTableLabel({ hideAttack = false }) {\n  const [theme] = useGlobal(\"theme\");\n\n  const labelStyles = {\n    color: theme,\n  };\n\n  const headerStyle = {\n    borderBottom: `1px solid ${theme}`,\n  };\n\n  return (\n    <div className=\"row gunRow gunTableLabel\" style={headerStyle}>\n      <div className=\"column\">\n        <div style={labelStyles}>Name</div>\n      </div>\n      <div className=\"column\">\n        <div style={labelStyles}>Range</div>\n      </div>\n      {!hideAttack && (\n        <div className=\"column\">\n          <div style={labelStyles}>Attack</div>\n        </div>\n      )}\n      <div className=\"column\">\n        <div style={labelStyles}>Damage</div>\n      </div>\n    </div>\n  );\n}\n","const classes = [\n  { type: \"pistol\", damage: \"2d6\", range: 40 },\n  { type: \"assault_rifle\", damage: \"2d10\", range: 60 },\n  { type: \"sniper_rifle\", damage: \"1d12\", range: 200 },\n  { type: \"shotgun\", damage: \"4d4\", range: 15 },\n  { type: \"rocket_launcher\", damage: \"2d20\", range: 60 },\n  { type: \"submachine_gun\", damage: \"3d4\", range: 40 },\n];\n\nconst brands = [\n  \"Dahl\",\n  \"Hyperion\",\n  \"Jakobs\",\n  \"Maliwan\",\n  \"Tediore\",\n  \"Torgue\",\n  \"Vladof\",\n];\n\nconst elements = [\"fire\", \"lightning\", \"cold\", \"force\", \"necrotic\"];\n\nconst uniformSample = (n) => {\n  return (Math.random() * (n + 1) + (n - 1)) | 0;\n};\n\nexport function generateGun(\n  rarity = 1,\n  classType = null,\n  brand = null,\n  element = null\n) {\n  // initialize gun with base stats\n  const gun = {\n    ...(classes.find((c) => c.type === classType) ||\n      classes[Math.floor(Math.random() * 6)]),\n    id: uuid(),\n    rarity: parseInt(rarity, 10),\n    brand: brands[Math.floor(Math.random() * 7)],\n    bonusDamage: null,\n    element: null,\n  };\n\n  // additional damage if any\n  let [newDamageCount, dieType] = gun.damage.split(\"d\");\n  newDamageCount = parseInt(newDamageCount, 10) + rarity - 1;\n  gun.damage = newDamageCount + \"d\" + dieType;\n\n  // modify base range\n  gun.range = gun.range + uniformSample(rarity - 1) * 10;\n\n  // apply base bonus damage if any\n  gun.bonusDamage =\n    gun.brand === \"Jakobs\"\n      ? null\n      : Math.random() > 0.8 || gun.brand === \"Maliwan\"\n        ? \"d6\"\n        : null;\n\n  // number of bonus damage dice\n  if (gun.bonusDamage) {\n    gun.bonusDamage = uniformSample(rarity + 1) + gun.bonusDamage;\n    // if element provided, use element\n    gun.element = element\n      ? element\n      : gun.element !== \"Torgue\"\n        ? elements[Math.floor(Math.random() * 7)]\n        : \"force\";\n  }\n  return gun;\n}\n\nexport function calculateDamage(gun) {\n  const roll = (d) => Math.floor(Math.random() * d) + 1;\n  let dmg = 0;\n  const [quantity, d] = gun.damage.split(\"d\");\n\n  for (let i = 0; i < quantity; i++) {\n    dmg += roll(d);\n  }\n  if (gun.bonusDamage) {\n    const [quantity2, d2] = gun.bonusDamage.split(\"d\");\n    for (let i = 0; i < quantity2; i++) {\n      dmg += roll(d2);\n    }\n  }\n  return dmg;\n}\n\nfunction uuid() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport { calculateDamage } from \"../utils/generate\";\n\nexport default function GunDisplay({\n  gun: { type, brand, range, damage, rarity, element, bonusDamage },\n  hideDamage = false,\n  hideAttack = false,\n  hitBonus = 0\n}) {\n  const [damageInst, setDamageInst] = useState(null);\n  const [fire, setFire] = useState(0);\n\n\n  const [attackInst, setAttackInst] = useState(null);\n  const [att, setAtt] = useState(0);\n\n  const bang = () => {\n    const getDamage = calculateDamage({\n      type,\n      brand,\n      range,\n      damage,\n      rarity,\n      element,\n      bonusDamage,\n    });\n\n    setDamageInst(getDamage);\n    setFire(fire + 1);\n  };\n\n  useEffect(() => {\n    let timer = null;\n    if (attackInst) {\n      timer = setTimeout(() => {\n        setDamageInst(null);\n      }, 2000)\n    }\n\n    return () => clearTimeout(timer)\n  }, [damageInst])\n\n  const rollAttack = () => {\n    let roll = Math.floor(Math.random() * 20 + 1)\n\n    if (roll === 20) {\n      alert(\"Natural 20!\")\n    }\n\n    roll += hitBonus + (rarity - 1)\n\n    setAttackInst(roll);\n    setAtt(att + 1);\n\n  };\n\n  useEffect(() => {\n    let timer = null;\n    if (attackInst) {\n      timer = setTimeout(() => {\n        setAttackInst(null);\n      }, 2000)\n    }\n\n    return () => clearTimeout(timer)\n  }, [attackInst])\n\n\n  const colorsByRarity = [\"#FFFFFF\", \"#00FF00\", \"#00DFFE\", \"#ffc107\"];\n  const color = colorsByRarity[rarity - 1];\n\n  const labelStyles = {\n    color,\n  };\n\n  const elementMap = {\n    fire: \"#FF5050\",\n    lightning: \"#0030FF\",\n    cold: \"#00dffe\",\n    force: \"yellow\",\n    necrotic: \"green\",\n  };\n\n  const elementColor = element ? elementMap[element] : null;\n\n  const elementStyles = {\n    color: elementColor,\n    marginLeft: \"0.5em\",\n  };\n\n  return (\n    <div className=\"row gunRow\">\n      <div className=\"column\">\n        <div style={labelStyles}>\n          {type\n            .replace(\"_\", \" \")\n            .toLowerCase()\n            .split(\" \")\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(\" \")}\n        </div>\n        <div style={{ ...labelStyles, fontSize: \"0.7em\" }}>{brand}</div>\n      </div>\n\n      <div className=\"column\">\n        <div style={labelStyles}>{range} ft</div>\n      </div>\n      {!hideAttack && (\n        <div className=\"column\">\n          <div className=\"row\">\n            <Button\n              key={att}\n              label={attackInst || \"+\" + (hitBonus + (rarity - 1))}\n              onClick={rollAttack}\n              color={color}\n              style={{ margin: 0 }}\n              className=\"popOff\"\n            />\n          </div>\n        </div>\n      )}\n\n      <div className=\"column\">\n        <div className=\"row\">\n          <Button\n            key={fire}\n            label={damageInst || damage}\n            onClick={!hideDamage && bang}\n            color={color}\n            style={{ margin: 0 }}\n            className=\"popOff\"\n\n          />\n          {element && <div style={elementStyles}>+{bonusDamage}</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useGlobal } from \"reactn\";\n\nexport default function RoundButton({ active = false, label, data, onClick }) {\n  const [theme] = useGlobal(\"theme\");\n\n  const btnStyles = {\n    border: `2px solid ${theme}`,\n    color: active ? \"#222222\" : theme,\n    backgroundColor: active ? theme : \"transparent\",\n  };\n\n  const handleOnClick = () => {\n    onClick(data);\n  };\n\n  return (\n    <button className=\"roundButton\" style={btnStyles} onClick={handleOnClick}>\n      {label || \"\"}\n    </button>\n  );\n}\n","import React, { useState, useGlobal } from \"reactn\";\nimport RoundButton from \"./RoundButton\";\nimport { generateGun } from \"../utils/generate\";\n\nexport default function GunSmith({ onNewGun }) {\n  const [theme] = useGlobal(\"theme\");\n  const [activeType, setActiveType] = useState(\"pistol\");\n  const [activeRarity, setActiveRarity] = useState(0);\n  // const [guns, setGuns] = useGlobal(\"guns\");\n\n  const btnStyles = {\n    border: `2px solid ${theme}`,\n    color: theme,\n    backgroundColor: \"transparent\",\n  };\n\n  const types = [\n    \"pistol\",\n    \"assault_rifle\",\n    \"sniper_rifle\",\n    \"shotgun\",\n    \"rocket_launcher\",\n    \"submachine_gun\",\n  ];\n\n  const rarities = [\"Common\", \"Rare\", \"Epic\", \"Legendary\"];\n\n  const typeMap = {\n    pistol: \"Pistol\",\n    assault_rifle: \"Assault\",\n    sniper_rifle: \"Sniper\",\n    shotgun: \"Shotgun\",\n    rocket_launcher: \"Rocket\",\n    submachine_gun: \"SMG\",\n  };\n\n  const addGun = () => {\n    const newGun = generateGun(activeRarity + 1, activeType, null, null);\n    // setGuns([...guns, newGun]);\n    onNewGun(newGun)\n  };\n\n  return (\n    <div id=\"gunSmith\">\n      <div className=\"gunSmithRow\">\n        <button className=\"roundButton\" style={btnStyles} onClick={addGun}>\n          +\n        </button>\n        <div className=\"scrollRow\">\n          {types.map((t) => (\n            <RoundButton\n              key={t}\n              data={t}\n              onClick={setActiveType}\n              active={activeType === t}\n              label={typeMap[t]}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"wrapRow\">\n        {rarities.map((r, i) => (\n          <RoundButton\n            key={r}\n            data={i}\n            onClick={setActiveRarity}\n            active={activeRarity === i}\n            label={r}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useGlobal, setGlobal, useState } from \"reactn\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultState } from \"../utils/data\";\nimport { X } from \"react-feather\";\n\nimport Fieldset from \"../components/Fieldset\";\nimport GunTableLabel from \"../components/GunTableLabel\";\nimport GunDisplay from \"../components/GunDisplay\";\nimport GunSmith from \"../components/GunSmith\";\n\nexport default function Config(props) {\n  const [state, setState] = useState(JSON.parse(localStorage.getItem('BL_Backup')) || {\n    hp: 20,\n    sp: 10,\n    dex: 0,\n    prof: 0\n  });\n\n  const [hasBeenUpdated, setHasBeenUpdated] = useState(false);\n\n  const [global] = useGlobal();\n  const [theme, setTheme] = useGlobal(\"theme\");\n  const [guns, setGuns] = useGlobal(\"guns\");\n\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n  const [dex] = useGlobal('dex');\n  const [prof] = useGlobal('prof');\n\n  const history = useHistory();\n\n  const updateGlobalStatus = () => {\n    setGlobal({\n      // guns,\n      theme,\n      hp: state.hp,\n      sp: state.sp,\n      dex: state.dex,\n      prof: state.prof,\n      healthRemaining: state.hp,\n      shieldRemaining: state.sp,\n    });\n\n    setHasBeenUpdated(true);\n  };\n\n  // after updating hp and sp, update backup\n  useEffect(() => {\n    const backup = JSON.stringify(global);\n    localStorage.setItem(\"BL_Backup\", backup);\n  }, [hp, sp, prof, dex]);\n\n  // navigate to app after update\n  useEffect(() => {\n    if (hasBeenUpdated) {\n      history.push(\"/app\");\n    }\n  }, [hasBeenUpdated]);\n\n  const updateValue = (e) => {\n    const newState = state;\n    newState[e.currentTarget.name] = parseInt(e.currentTarget.value, 10);\n    setState({ ...newState });\n  };\n\n  const updateTheme = (e) => {\n    const val = e.currentTarget.value;\n\n    setTheme(val);\n  };\n\n  const labeStyles = {\n    color: theme,\n  };\n\n  const reset = () => {\n    setGlobal(defaultState);\n    localStorage.removeItem(\"BL_Backup\");\n  };\n\n  const deleteItem = (e) => {\n    const id = e.currentTarget.getAttribute(\"data-id\");\n\n    const newGunsList = guns.filter((g) => g.id !== id);\n\n    setGuns(newGunsList);\n  };\n\n  const onNewGun = (newGun) => {\n    setGuns([...guns, newGun]);\n  }\n  return (\n    <div>\n      <div className=\"section row between\">\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.hp} name=\"hp\" />\n          <div style={labeStyles}>Hitpoints</div>\n        </div>\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.sp} name=\"sp\" />\n          <div style={labeStyles}>Shield Power</div>\n        </div>\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.dex} name=\"dex\" />\n          <div style={labeStyles}>Dexterity</div>\n        </div>\n        <div className=\"column center\">\n          <Input onChange={updateValue} value={state.prof} name=\"prof\" />\n          <div style={labeStyles}>Proficiency</div>\n        </div>\n      </div>\n      <Fieldset label={\"Color Theme\"}>\n        <input\n          className=\"input color-picker\"\n          type=\"color\"\n          onChange={updateTheme}\n          value={theme}\n          style={{\n            boxShadow: \"inset 0px 0px 0.1em \" + theme,\n            filter: `drop-shadow(0px 0px 0.5em ${theme})`,\n            border: `3px solid ${theme}`,\n          }}\n        />\n      </Fieldset>\n      <Fieldset label={\"Manage Guns\"}>\n        <GunSmith onNewGun={onNewGun} />\n        <div className=\"gunRowWrapper\">\n          <GunTableLabel hideDamage hideAttack />\n          <X className=\"delete-gun\" color={\"transparent\"} />\n        </div>\n        {guns &&\n          guns.map((gun) => (\n            <div key={gun.id} className=\"gunRowWrapper\">\n              <GunDisplay hideDamage hideAttack gun={gun} />\n              <X\n                className=\"delete-gun\"\n                onClick={deleteItem}\n                color={theme}\n                data-id={gun.id}\n              />\n            </div>\n          ))}\n      </Fieldset>\n\n      <div className=\"section\">\n        <Button label={\"save\"} onClick={updateGlobalStatus} />\n      </div>\n      <div className=\"section\">\n        <Button label={\"clear\"} color={\"#F44336\"} onClick={reset} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function StatusBar({\n  blue = false,\n  total = 10,\n  remaining = 10,\n  ...props\n}) {\n  const color = blue ? \"#00dffc\" : \"#F44336\";\n\n  const styles = {\n    width: ((remaining / total) * 100).toFixed(2) + \"%\",\n    background: color,\n  };\n\n  const fieldsetStyles = {\n    borderColor: blue ? \"#00dffc\" : \"#F44336\",\n    boxShadow: \"inset 0px 0px 1em \" + color,\n    filter: `drop-shadow(0px 0px ${(remaining / total) * 0.5 + \"em\"} ${color})`,\n  };\n\n  const regen = () => {\n    props.regen(blue);\n  };\n\n  return (\n    <div>\n      <fieldset\n        className=\"statusBarFieldSet\"\n        onClick={regen}\n        style={fieldsetStyles}\n      >\n        <legend className=\"legend textBorder\">{remaining}</legend>\n        <div className=\"statusBarInner\" style={styles}></div>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useGlobal } from \"reactn\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nexport default function HealDamage(props) {\n  const [shieldRemaining, setShieldRemaining] = useGlobal(\"shieldRemaining\");\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n\n  const [healthRemaining, setHealthRemaining] = useGlobal(\"healthRemaining\");\n  const [amount, setAmount] = useState(0);\n\n  const doDamage = () => {\n    const amt = parseInt(amount, 10);\n\n    let amountLeft = amt;\n\n    // if damage done is excessive (double total sp) we still do health damage\n    if (amountLeft > sp * 2) {\n      amountLeft = amountLeft - sp * 2;\n      setShieldRemaining(0);\n\n      setHealthRemaining(\n        amountLeft >= healthRemaining ? 0 : healthRemaining - amountLeft\n      );\n      amountLeft = 0;\n    }\n\n    // return early if need be\n    if (amountLeft <= 0) {\n      return;\n    }\n\n    // first do damage to shield, then hp if none available\n    if (shieldRemaining > 0) {\n      setShieldRemaining(\n        amountLeft >= shieldRemaining ? 0 : shieldRemaining - amountLeft\n      );\n    } else {\n      setHealthRemaining(\n        amountLeft >= healthRemaining ? 0 : healthRemaining - amountLeft\n      );\n    }\n  };\n\n  useEffect(() => {\n    setAmount(0);\n  }, [healthRemaining, shieldRemaining]);\n\n  const updateAmount = (e) => {\n    setAmount(e.currentTarget.value);\n  };\n\n  const addHealth = () => {\n    const amt = parseInt(amount, 10);\n\n    if (healthRemaining + amt >= hp) {\n      setHealthRemaining(hp);\n    } else {\n      setHealthRemaining(healthRemaining + amt);\n    }\n  };\n\n  const inputStyles = { marginLeft: \"1em\", marginRight: \"1em\" };\n  return (\n    <div className=\"row center\">\n      <Button onClick={doDamage} label={\"-\"} color={\"#F44336\"} />\n      <Input value={amount} onChange={updateAmount} style={inputStyles} />\n      <Button onClick={addHealth} label={\"+\"} color={\"#09ff9b\"} />\n    </div>\n  );\n}\n","import React, { useGlobal, useEffect, setGlobal } from \"reactn\";\nimport StatusBar from \"../components/StatusBar\";\nimport HealDamage from \"../components/HealDamage\";\n\nimport GunTableLabel from \"../components/GunTableLabel\";\nimport GunDisplay from \"../components/GunDisplay\";\nimport Fieldset from \"../components/Fieldset\";\nimport Input from \"../components/Input\";\nimport { Clipboard } from \"react-feather\";\n\nexport default function Dashboard() {\n  const [sp] = useGlobal(\"sp\");\n  const [hp] = useGlobal(\"hp\");\n  const [dex] = useGlobal(\"dex\");\n  const [prof] = useGlobal(\"prof\");\n  const [guns] = useGlobal(\"guns\");\n  const [theme] = useGlobal('theme');\n  const [shieldRemaining, setShieldRemaining] = useGlobal(\"shieldRemaining\");\n  const [healthRemaining, setHealthRemaining] = useGlobal(\"healthRemaining\");\n\n  const [global] = useGlobal();\n\n  const hitBonus = prof + dex;\n  const base64backup = btoa(JSON.stringify(global));\n  console.log(base64backup)\n  const regen = (shouldRegenShield) => {\n    shouldRegenShield ? setShieldRemaining(sp) : setHealthRemaining(hp);\n  };\n\n  useEffect(() => {\n    console.log(global)\n  }, [global])\n\n  useEffect(() => {\n    const backup = JSON.stringify(global);\n    localStorage.setItem(\"BL_Backup\", backup);\n  }, [shieldRemaining, healthRemaining]);\n\n  const copyText = () => {\n    navigator.clipboard.writeText(base64backup).then(function () {\n      /* clipboard successfully set */\n      alert(\"copied to clipboard\")\n    }, function () {\n      /* clipboard write failed */\n    });\n  }\n\n  const handlePaste = (e) => {\n    // take base64 string\n    const string = e.clipboardData.getData('Text');\n    console.log(string);\n    // convert to utf-8\n    let obj = atob(string)\n    obj = JSON.parse(obj)\n\n    if (!obj.hasOwnProperty(\"theme\")) {\n      // probably got malformed, abort\n      return;\n    }\n\n    setGlobal(obj);\n\n    // update local storage\n    window.localStorage.setItem(\"BL_Backup\", JSON.stringify(obj))\n  }\n\n  const onClickSelect = (e) => {\n    e.currentTarget.select();\n  }\n\n  return (\n    <div id=\"dashboard\">\n      <Fieldset label={\"Health & Shields\"}>\n        {/* SP */}\n        <StatusBar blue total={sp} remaining={shieldRemaining} regen={regen} />\n        {/* HP */}\n        <StatusBar total={hp} remaining={healthRemaining} regen={regen} />\n\n        {/* Damage/Heal */}\n        <HealDamage />\n      </Fieldset>\n\n      <Fieldset label={\"Guns\"}>\n        <GunTableLabel />\n        {guns && guns.map((gun) => <GunDisplay key={gun.id} gun={gun} hitBonus={hitBonus} />)}\n      </Fieldset>\n\n      <div className=\"row\">\n        <Input\n          defaultValue={base64backup}\n          style={{ cursor: \"pointer\", width: \"-webkit-fill-available\" }}\n          onPaste={handlePaste}\n          onClick={onClickSelect}\n        />\n        <Clipboard\n          onClick={copyText}\n          color={theme}\n          style={{ marginLeft: \"1em\", marginRight: \"1em\", alignSelf: \"center\", cursor: \"pointer\" }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useGlobal, useState } from \"reactn\";\n\nimport GunTableLabel from \"../components/GunTableLabel\";\nimport GunDisplay from \"../components/GunDisplay\";\nimport Fieldset from \"../components/Fieldset\";\nimport GunSmith from \"../components/GunSmith\";\nimport { X } from \"react-feather\";\n\nexport default function Dashboard(props) {\n  const [myGuns] = useGlobal('guns');\n  const [dex] = useGlobal('dex');\n  const [prof] = useGlobal('prof');\n\n  const hitBonus = dex + prof;\n\n  myGuns.forEach((g, i) => {\n    myGuns[i] = { ...g, mine: true }\n  })\n\n  const [guns, setGuns] = useState(myGuns || []);\n  const [theme] = useGlobal(\"theme\");\n\n  // const [damage, setDamage] = useState(null);\n  // const [avgDmg, setAvgDmg] = useState({\n  //   pistol: [],\n  //   assault_rifle: [],\n  //   sniper_rifle: [],\n  //   shotgun: [],\n  //   rocket_launcher: [],\n  //   submachine_gun: [],\n  // });\n\n  const onNewGun = (newGun) => {\n    setGuns([...guns, newGun]);\n  }\n\n  const deleteItem = (e) => {\n    const id = e.currentTarget.getAttribute(\"data-id\");\n\n    const newGunsList = guns.filter((g) => g.id !== id);\n\n    setGuns(newGunsList);\n  };\n\n  return (\n    <>\n      <Fieldset label={\"Buncha Guns Over Here\"}>\n        <GunSmith onNewGun={onNewGun} />\n        <div className=\"gunRowWrapper\">\n          <GunTableLabel />\n          <X className=\"delete-gun\" color={\"transparent\"} />\n        </div>\n        {guns &&\n          guns.map((gun) => (\n            <div key={gun.id} className=\"gunRowWrapper\">\n              <GunDisplay gun={gun} hitBonus={hitBonus} />\n              <X\n                className=\"delete-gun\"\n                onClick={gun.mine ? () => { } : deleteItem}\n                color={gun.mine ? \"transparent\" : theme}\n                data-id={gun.id}\n              />\n            </div>\n          ))}\n      </Fieldset>\n\n      {/* {damage ? (\n        <div key={Math.random()} className={\"popOff\"}>\n          {damage}\n        </div>\n      ) : null}\n\n      <div>\n        Average Damage:\n        {avgDmg[\"pistol\"].length ? (\n          <div>\n            {\"pistol:  \" +\n              avgDmg[\"pistol\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"pistol\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"assault_rifle\"].length ? (\n          <div>\n            {\"assault_rifle: \" +\n              avgDmg[\"assault_rifle\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"assault_rifle\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"sniper_rifle\"].length ? (\n          <div>\n            {\"sniper_rifle:  \" +\n              avgDmg[\"sniper_rifle\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"sniper_rifle\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"shotgun\"].length ? (\n          <div>\n            {\"shotgun: \" +\n              avgDmg[\"shotgun\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"shotgun\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"rocket_launcher\"].length ? (\n          <div>\n            {\"rocket_launcher: \" +\n              avgDmg[\"rocket_launcher\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"rocket_launcher\"].length}\n          </div>\n        ) : null}\n        {avgDmg[\"submachine_gun\"].length ? (\n          <div>\n            {\"submachine_gun: \" +\n              avgDmg[\"submachine_gun\"].reduce((d, agg) => (agg += d)) /\n              avgDmg[\"submachine_gun\"].length}\n          </div>\n        ) : null}\n      </div> */}\n      {/* <Button onClick={shoot} label={\"Button\"} /> */}\n    </>\n  );\n}\n","import React, {\n  useState,\n  useGlobal,\n  setGlobal,\n  useEffect,\n} from \"reactn\";\n\nimport Nav from \"./components/Nav\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { defaultState } from \"./utils/data\";\nimport ScaleLoader from \"@bit/davidhu2000.react-spinners.scale-loader\";\n\nimport \"./App.css\";\n\nimport Config from \"./pages/Config\"\nimport Dashboard from \"./pages/Dashboard\"\nimport GunRange from \"./pages/GunRange\"\n\n// initialize with default data\nsetGlobal(defaultState);\n\nfunction App() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [globalState] = useGlobal();\n  useEffect(() => {\n    //   if local data exists hydrate our store with it\n    if (localStorage && localStorage.getItem(\"BL_Backup\")) {\n      const backup = JSON.parse(localStorage.getItem(\"BL_Backup\"));\n      setGlobal({\n        ...backup,\n      });\n    }\n\n    setHasLoaded(true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {hasLoaded ? (\n        <Router>\n          <Nav />\n          <Switch>\n            <Route path=\"/config\">\n              <Config />\n            </Route>\n            <Route path=\"/guns\">\n              <GunRange />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </Router>\n      ) : (\n        <div className=\"column center\" style={{ height: \"100vh\" }}>\n          <ScaleLoader\n            height={90}\n            width={10}\n            color={globalState.theme || \"#6b5ce7\"}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}